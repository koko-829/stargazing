<div class="display-wrapper">
  <div class="display-container">
    <div class="loader">
      <span></span>
      <span></span>
      <span></span>
      <h2 class="gradation lato">Now Loading...</h2>
    </div>

    <div class="title title-hidden">
    <span class='gradation'>Stargazing</span>
    </div>

    <div class="text-container">
    <%= render 'shared/text_container' %>
    </div>
  </div>
</div>

<div id="form", class="form-hidden">
  <%= form_with model: @star, class: 'yomogi-regular form-container' do |f| %>
    <%= f.text_field :word, placeholder: '好きな言葉を教えてね', class: 'input-field' %>
    <%= f.text_field :name, placeholder: '誰の名言かな？', class: 'input-field' %>
    <%= f.submit '登録', class: 'submit' %>
  <% end %>
</div>

<%= render 'shared/next_button' %>



<div class="star-hidden">
  <%= render 'shared/star_background' %>
</div>

<script>
  // ページが読み込まれたら実行される処理
  window.onload = function(){
    // setTimeout(()=> {処理}, 時間)で、指定時間後に処理を実行できる
    setTimeout(()=> {
      // loaderクラスを消して、titleを見せるためのJSを書き込んでいく
      // loaderクラスを取得するための変数を定義
      let loader = document.querySelector('.loader');
      // loaderクラスをloadedに変更するための処理
      loader.classList.add('loaded');

      // titleのクラスを取得する
      let title = document.querySelector('.title');
      // titleクラスのopacityをデフォルトの0から1にすることで、titleを表示させる
      title.classList.remove('title-hidden');
      title.classList.add('title-visible');

      // star-hiddenクラスを取得する
      let starHidden = document.querySelector('.star-hidden');
      // star-hiddenクラスをstar-showに変更するための処理
      starHidden.classList.add('star-show');

      // tap-buttonのIDを取得する
      let tapButton = document.getElementById('tap-button');
      //tap-buttonにbutton-visibleクラスを追加する
      tapButton.classList.remove('button-hidden');
      tapButton.classList.add('button-visible-title');

    }, 3000);
  };

  // tap-buttonをクリックした時にbutton-visibleクラスとbutton-hiddenクラスを入れ替える。
  document.addEventListener('DOMContentLoaded', function() {
    let tapButton = document.getElementById('tap-button');
    //イベントリスナーを追加して実際にtap-button要素をクリックしたときの処理をつける。
    tapButton.addEventListener('click', function() {
      // button-visible-titleがついていた場合のクリック処理(button-hiddenをつける。)
      if (tapButton.classList.contains('button-visible-title')) {
        tapButton.classList.remove('button-visible-title');
        tapButton.classList.add('button-hidden');

        // title画面でボタン押したときの処理
        // titleを外して, text1のクラスをtext1-visibleに変更する
        // '夜空を眺めてると名言呟きたくなるよね…'を表示させる
        let title = document.querySelector('.title');
        title.classList.add('title-hidden');
        let text1 = document.querySelector('.text1-hidden');
        //text1.classList.remove('text1-hidden');
        text1.classList.add('text1-visible');
        setTimeout(() => {
        tapButton.classList.remove('button-hidden');
        tapButton.classList.add('button-visible1');
        }, 3000);
      }

      // text1でボタンを押したときの処理
      // text1を外して, text2のクラスをtext2-visibleに変更する
      // '素敵な言葉を星に込めるお仕事をしてるんだ。'を表示させる
      else if (tapButton.classList.contains('button-visible1')) {
        tapButton.classList.remove('button-visible1');
        tapButton.classList.add('button-hidden');
        let text1 = document.querySelector('.text1-visible');
        text1.classList.remove('text1-visible');
        //text1.classList.add('text1-hidden');
        let text2 = document.querySelector('.text2-hidden');
        //text2.classList.remove('text2-hidden');
        text2.classList.add('text2-visible');
        setTimeout(() => {
          tapButton.classList.remove('button-hidden');
          tapButton.classList.add('button-visible2');
        }, 3000);
      }

      // text2でボタンを押したときの処理
      else if (tapButton.classList.contains('button-visible2')) {
        tapButton.classList.remove('button-visible2');
        tapButton.classList.add('button-hidden');
        let text2 = document.querySelector('.text2-visible');
        text2.classList.remove('text2-visible');
        let text3 = document.querySelector('.text3-hidden');
        text3.classList.add('text3-visible');
        setTimeout(() => {
          tapButton.classList.remove('button-hidden');
          tapButton.classList.add('button-visible3');
        }, 3000);
      }

      // text3でボタンを押したときの処理
      else if (tapButton.classList.contains('button-visible3')) {
        tapButton.classList.remove('button-visible3');
        tapButton.classList.add('button-hidden');
        let text3 = document.querySelector('.text3-visible');
        text3.classList.remove('text3-visible');
        let text4 = document.querySelector('.text4-hidden');
        text4.classList.add('text4-visible');
        setTimeout(() => {
          tapButton.classList.remove('button-hidden');
          tapButton.classList.add('button-visible4');
        }, 3000);
      }

      // text4でボタンを押したときの処理=>formを表示させる
      else if (tapButton.classList.contains('button-visible4')) {
        tapButton.classList.remove('button-visible4');
        tapButton.classList.add('button-hidden');
        let text4 = document.querySelector('.text4-visible');
        text4.classList.remove('text4-visible');
        let form = document.querySelector('.form-hidden');
        form.classList.remove('form-hidden');
        form.classList.add('form-visible');
      }

      // // text5でボタンを押したときの処理
      // else if (tapButton.classList.contains('button-visible5')) {
      //   tapButton.classList.remove('button-visible5');
      //   tapButton.classList.add('button-hidden');
      //   let text5 = document.querySelector('.text5-visible');
      //   text5.classList.remove('text5-visible');
      //   let text6 = document.querySelector('.text6-hidden');
      //   text6.classList.add('text6-visible');
      //   setTimeout(() => {
      //     tapButton.classList.remove('button-hidden');
      //     tapButton.classList.add('button-visible6');
      //   }, 3000);
      // }
    });
  });

</script>